#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT

#define LANG_SW LA(SPACE)
#define LANG_1 LG(LC(N1))
#define LANG_2 LG(LC(N2))
#define LANG_3 LG(LC(N3))
#define SCREEN LG(LS(N4))
#define BT_0 BT_SEL 0
#define BT_1 BT_SEL 1
#define BT_2 BT_SEL 2
#define BT_3 BT_SEL 3

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;     // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;     // 500
            delay-ms = <0>;                   // 10
        };

        shrave: shift_grave {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LSHFT>, <&kp GRAVE>;
            mods = <(MOD_LGUI)>;
        };
    };
    // this turns off the &lt behaviour
    // conditional_layers {
    //     compatible = "zmk,conditional-layers";
    //     tri_layer {
    //         if-layers = <1 2>;
    //         then-layer = <3>;
    //     };
    // };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&mo 3      &kp N1     &kp N2         &kp N3     &kp N4     &kp N5                      &mmv MOVE_UP                &kp N6     &kp N7       &kp N8      &kp N9           &kp N0      &mo 3
&kp ESC    &kp Q      &kp W          &kp E      &kp R      &kp T                       &mmv MOVE_DOWN              &kp Y      &kp U        &kp I       &kp O            &kp P       &kp BSPC
&kp TAB    &kp A      &kp S          &kp D      &kp F      &kp G                       &mmv MOVE_LEFT              &kp H      &kp J        &kp K       &kp L            &kp SEMI    &kp APOS
&kp LSHFT  &kp Z      &kp X          &kp C      &kp V      &kp B                       &mmv MOVE_RIGHT             &kp N      &kp M        &kp COMMA   &kp DOT          &kp LBKT    &kp RBKT
&kp C_MUTE            &kp LCTRL      &mo 2      &kp LCMD   &kp LSHFT   &kp LALT        &mkp LCLK       &kp RALT    &kp SPACE   &mo 1      &lt 3 ENTER  &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            display-name = "base";
        };

        layer_1 {
            bindings = <
&trans   &none      &none      &none      &none      &none             &trans              &none       &none      &none        &none       &none       &kp DEL
&trans   &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp LT            &trans              &kp GT      &kp UNDER  &kp PLUS     &kp MINUS   &kp EQUAL   &kp DEL 
&trans   &kp CARET  &kp AMPS   &kp STAR   &kp PRCNT  &kp LPAR          &trans              &kp RPAR    &kp LEFT   &kp DOWN     &kp UP      &kp RIGHT   &kp LANG_2
&trans   &kp SLASH  &kp TILDE  &kp PIPE   &kp QMARK  &kp LBKT          &trans              &kp RBKT    &kp GRAVE  &kp LBRC     &kp RBRC    &kp BSLH    &kp LANG_1
&trans              &trans     &trans     &trans     &trans   &trans   &trans    &trans    &trans      &trans     &trans       &trans
            >;

            display-name = "lower";
            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        layer_2 {
            bindings = <
&trans     &none       &none       &none      &none        &none                &trans                 &none        &none        &none    &none    &none          &trans
&kp ENTER  &kp N1      &kp N2      &kp N3     &kp N4       &kp N5               &trans                 &trans       &trans       &trans   &trans   &trans         &kp LA(BSPC)
&kp BSPC   &kp N6      &kp N7      &kp N8     &kp N9       &kp N0               &trans                 &trans       &kp LA(LEFT) &trans   &trans   &kp LA(RIGHT)  &trans
&trans     &kp LEFT    &kp UP      &kp DOWN   &kp RIGHT    &kp DOT              &trans                 &trans       &trans       &trans   &trans   &trans         &trans
&kp C_PP               &trans      &trans     &trans       &trans  &kp SCREEN   &mkp RCLK   &kp RCTRL  &kp RCMD     &kp RALT     &trans   &trans
            >;

            display-name = "raise";
            sensor-bindings = <&inc_dec_kp C_NEXT C_PREV>;
        };

        layer_3 {
            bindings = <
&trans      &bt BT_0   &bt BT_1   &bt BT_2    &bt BT_3     &bt BT_CLR              &trans                   &rgb_ug RGB_TOG  &none         &none       &none         &none          &kp DEL
&trans      &kp F1     &kp F2     &kp F3      &kp F4       &kp F5                  &trans                   &rgb_ug RGB_BRI  &kp C_PREV    &kp C_PP    &kp C_NEXT    &kp C_BRI_INC  &kp DEL
&trans      &kp F6     &kp F7     &kp F8      &kp F9       &kp F10                 &trans                   &rgb_ug RGB_BRD  &kp C_VOL_DN  &kp C_MUTE  &kp C_VOL_UP  &kp C_BRI_DEC  &trans
&trans      &kp F11    &kp F12    &none       &trans       &trans                  &trans                   &trans           &trans        &trans      &trans        &trans         &trans
&trans                 &trans     &trans      &trans       &trans     &sys_reset   &mkp RCLK   &sys_reset   &trans           &trans        &trans      &trans
            >;

            display-name = "FN";
            sensor-bindings = <&scroll_encoder>;
        };       
  
    };
};
